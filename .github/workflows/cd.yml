# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build to GKE

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: asia-southeast1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  REPOSITORY: samples # TODO: update to Artifact Registry docker repository
  IMAGE: static-site

jobs:
  setup-build:
    name: Setup, Build
    runs-on: ubuntu-latest
    environment: dev

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        create_credentials_file: 'true'
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD }}
        service_account: ${{ secrets.SERVER_ACCOUNT }}
      
    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    
    - id: 'gcloud'
      name: 'gcloud'
      run: |-
         " gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
         " export GOOGLE_APPLICATION_CREDENTIALS="${{ steps.auth.outputs.credentials_file_path }}"
         gcloud auth configure-docker -q
         # gcloud config set account lahatrap20.aps2a@gmail.com
         #gcloud config set project ${{ secrets.GKE_PROJECT }}
         gcloud auth list
        
    - id: 'compute-ssh'
      uses: 'google-github-actions/ssh-compute@v0'
      with:
        instance_name: 'cs-1018782347392-default'
        zone: 'asia-southeast1'
        ssh_private_key: '${{ secrets.SSK_KEY }}'
      
    - name: Git clone project
      run: |- 
        # cd /home/lahatrap20_aps2a
        # gcloud config set account lahatrap20.aps2a@gmail.com
        # gcloud config set project ${{ secrets.GKE_PROJECT }}
        echo $HOME
        hostname
        # cd /home/lahatrap20_aps2a
        # git clone https://github.com/lahatra3/lghctrp3.git
